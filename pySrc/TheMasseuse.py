# 面试题 17.16.按摩师
# 一个有名的按摩师会收到源源不断的预约请求，每个预约都可以选择接或不接。在每次预约服务之间要有休息时间，因此她不能接受相邻的预约。给定一个预约请求序列，替按摩师找到最优的预约集合（总预约时间最长），返回总的分钟数。
# 注意：本题相对原题稍作改动
#
# 示例1：
# 输入： [1, 2, 3, 1]
# 输出： 4
# 解释： 选择1号预约和3号预约，总时长 = 1 + 3 = 4。
# 示例2：
# 输入： [2, 7, 9, 3, 1]
# 输出： 12
# 解释： 选择1号预约、 3号预约和5号预约，总时长 = 2 + 9 + 1 = 12。

class Solution:
    # 84.20%,5.55%
    def massage(self, nums) -> int:
        n = len(nums)
        if n < 1:
            return 0
        # dp[i][0]代表不接预约，dp[i][1]代表接预约的时间
        dp = [[0 for i in range(2)]for j in range(n)]
        dp[0][0] = 0
        dp[0][1] = nums[0]
        for i in range(1,n):
            dp[i][0] = max(dp[i-1][0],dp[i-1][1])
            dp[i][1] = dp[i-1][0] + nums[i]
        return max(dp[n-1][0],dp[n-1][1])


s=Solution()
print(s.massage([2,1,4,5,3,1,1,3]))
